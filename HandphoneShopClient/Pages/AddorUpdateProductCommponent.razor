@page "/add-product"
<div class="container">
    <div class="row">
        <div class="col-md-6">
            <EditForm Model="MyProduct" Enhance OnInvalidSubmit="HandleSaveProduct">
                <DataAnnotationsValidator/>
                <ValidationSummary/>
                <div class="card">
                <div class="card-header">Add Product</div>
                <div class="card-body">
                    <div class="form-group">
                        <label class="form-label">Nama</label>
                        <InputText @bind-Value="MyProduct.Name" class="form-control"></InputText>

                    </div>

                    <div class="form-group mt-3">
                            <label class="form-label">Price</label>
                            <InputNumber @bind-Value="MyProduct.Price" class="form-control"></InputNumber>
                    </div>

                        <div class="form-group mt-3">
                            <label class="form-label">Quantity</label>
                            <InputNumber @bind-Value="MyProduct.Quality" class="form-control"></InputNumber>
                        </div>

                        <div class="form-group mt-3">
                            <label class="form-label">Description</label>
                            <InputTextArea @bind-Value="MyProduct.Description" class="form-control"></InputTextArea>
                        </div>
                        <div class="form-group mt-3">
                            <label class="form-label @(ImageUploadMassage ==""?"":"text-danger")">
                                @(ImageUploadMassage == ""?"Upload Image" : ImageUploadMassage)
                            </label>
                            <InputFile class="form-control" OnChange="UploadImage"></InputFile>
                        </div>
                </div>
                <div class="card-footer">
                    <div class="card-footer">
                        <div class="form-group mt-3">
                                @if (ShowSaveButton)
                                {
                                    <button type="submit" class="btn btnbtn-outline-primary"><i class="fa fa-plus"></i>Save Product</button>
                                }
                                <BusyButtonComponent ShowBusyButton="ShowBusyButton"></BusyButtonComponent>
                        </div>
                    </div>
                </div>
            </div>
                
                
            </EditForm>
        </div>
    </div>
</div>
<MessageDialog @ref="messageDialog"></MessageDialog>



@code {
    Product MyProduct = new();
    string ImageUploadMassage = "";
    async Task HandleSaveProduct()
    {
        ShowSaveButton = false;
        ShowBusyButton = !ShowSaveButton;
        if (string.IsNullOrEmpty(MyProduct.Base64Img))
        {
            messageDialog!.SetDialogValues("warning", "You need to choose image");
            SetMessageDialog();
            return;
        }
    }
    async Task UploadImage(InputFileChangeEventArgs e)
    {
        if (e.File.Name.ToLower().Contains(".png"))
        {
            var format = "image/png";
            var resizeImage = await e.File.RequestImageFileAsync(format, 300, 300);
            var buffer = new byte[resizeImage.Size];
            await resizeImage.OpenReadStream().ReadAsync(buffer);
            var imageData = $"data:{format};base64,{Convert.ToBase64String(buffer)}";
            ImageUploadMassage="";
            MyProduct.Base64Img = imageData;
            imageData = "";
            return;
        }
        ImageUploadMassage = "PNG file needed";
        return;
    }
    MessageDialog? messageDialog;
    public bool ShowBusyButton{ get; set; }
    public bool ShowSaveButton { get; set; } = true;

    private async void SetMessageDialog()
    {
        await messageDialog!.ShowMessage();
        ShowBusyButton=false;
        ShowSaveButton = !ShowBusyButton;
        StateHasChanged();
    }
    
}
